"use strict";(self.webpackChunkfuse_react_app=self.webpackChunkfuse_react_app||[]).push([[3561],{44269:(e,n,t)=>{t.d(n,{Z:()=>L});var i=t(1483),l=t(75908),s=t(73428),a=t(71263),c=t(65280),r=t(5297),o=t(83061),d=t(47313),m=t(1168),h=t(10223),u=t(21871),f=t(95682),x=t(35301),p=t(19860),g=t(17592),b=t(70499),k=t(46417);function C(e){const{children:n,document:t}=e,i=(0,p.Z)();d.useEffect((()=>{t.body.dir=i.direction}),[t,i.direction]);const l=d.useMemo((()=>(0,u.Z)({key:"iframe-demo-".concat(i.direction),prepend:!0,container:t.head,stylisPlugins:"rtl"===i.direction?[h.Z]:[]})),[t,i.direction]),s=d.useCallback((()=>t.defaultView),[t]);return(0,k.jsx)(x.LC,{target:t.head,stylisPlugins:"rtl"===i.direction?[h.Z]:[],children:(0,k.jsxs)(f.C,{value:l,children:[(0,k.jsx)(b.Z,{styles:()=>({html:{fontSize:"62.5%"}})}),d.cloneElement(n,{window:s})]})})}const v=(0,g.ZP)("iframe")((e=>{let{theme:n}=e;return{backgroundColor:n.palette.background.default,flexGrow:1,height:400,border:0,boxShadow:n.shadows[1]}}));function j(e){var n;const{children:t,name:i,...l}=e,s="".concat(i," demo"),a=d.useRef(null),[c,r]=d.useReducer((()=>!0),!1);d.useEffect((()=>{const e=a.current.contentDocument;null==e||"complete"!==e.readyState||c||r()}),[c]);const o=null===(n=a.current)||void 0===n?void 0:n.contentDocument;return(0,k.jsxs)(k.Fragment,{children:[(0,k.jsx)(v,{onLoad:r,ref:a,title:s,...l}),!1!==c?m.createPortal((0,k.jsx)(C,{document:o,children:t}),o.body):null]})}const Z=d.memo(j);function I(e){const[n,t]=(0,d.useState)(e.currentTabIndex),{component:m,raw:h,iframe:u,className:f}=e;return(0,k.jsxs)(s.Z,{className:(0,o.default)(f,"shadow"),children:[(0,k.jsx)(l.Z,{position:"static",color:"default",className:"shadow-0",children:(0,k.jsxs)(r.Z,{classes:{root:"border-b-1",flexContainer:"justify-end"},value:n,onChange:function(e,n){t(n)},children:[m&&(0,k.jsx)(c.Z,{classes:{root:"min-w-64"},icon:(0,k.jsx)(a.Z,{children:"remove_red_eye"})}),h&&(0,k.jsx)(c.Z,{classes:{root:"min-w-64"},icon:(0,k.jsx)(a.Z,{children:"code"})})]})}),(0,k.jsxs)("div",{className:"flex justify-center max-w-full relative",children:[(0,k.jsx)("div",{className:0===n?"flex flex-1 max-w-full":"hidden",children:m&&(u?(0,k.jsx)(Z,{children:(0,k.jsx)(m,{})}):(0,k.jsx)("div",{className:"p-24 flex flex-1 justify-center max-w-full",children:(0,k.jsx)(m,{})}))}),(0,k.jsx)("div",{className:1===n?"flex flex-1":"hidden",children:h&&(0,k.jsx)("div",{className:"flex flex-1",children:(0,k.jsx)(i.Z,{component:"pre",className:"language-javascript w-full",sx:{borderRadius:"0!important"},children:h.default})})})]})]})}I.defaultProps={currentTabIndex:0};const L=I},64451:(e,n,t)=>{t.d(n,{Z:()=>g});var i=t(47313),l=t(9019),s=t(48310),a=t(73428),c=t(54641),r=t(60194),o=t(83213),d=t(74748),m=t(44758),h=t(24193),u=t(19536),f=t(46417);function x(e,n){return e.filter((e=>-1===n.indexOf(e)))}function p(e,n){return e.filter((e=>-1!==n.indexOf(e)))}function g(){const[e,n]=i.useState([]),[t,g]=i.useState([0,1,2,3]),[b,k]=i.useState([4,5,6,7]),C=p(e,t),v=p(e,b),j=t=>()=>{const i=e.indexOf(t),l=[...e];-1===i?l.push(t):l.splice(i,1),n(l)},Z=n=>p(e,n).length,I=t=>()=>{var i,l;Z(t)===t.length?n(x(e,t)):n((i=e,l=t,[...i,...x(l,i)]))},L=(n,t)=>(0,f.jsxs)(a.Z,{children:[(0,f.jsx)(c.Z,{sx:{px:2,py:1},avatar:(0,f.jsx)(m.Z,{onClick:I(t),checked:Z(t)===t.length&&0!==t.length,indeterminate:Z(t)!==t.length&&0!==Z(t),disabled:0===t.length,inputProps:{"aria-label":"all items selected"}}),title:n,subheader:"".concat(Z(t),"/").concat(t.length," selected")}),(0,f.jsx)(u.Z,{}),(0,f.jsxs)(s.Z,{sx:{width:200,height:230,bgcolor:"background.paper",overflow:"auto"},dense:!0,component:"div",role:"list",children:[t.map((n=>{const t="transfer-list-all-item-".concat(n,"-label");return(0,f.jsxs)(r.ZP,{role:"listitem",button:!0,onClick:j(n),children:[(0,f.jsx)(d.Z,{children:(0,f.jsx)(m.Z,{checked:-1!==e.indexOf(n),tabIndex:-1,disableRipple:!0,inputProps:{"aria-labelledby":t}})}),(0,f.jsx)(o.Z,{id:t,primary:"List item ".concat(n+1)})]},n)})),(0,f.jsx)(r.ZP,{})]})]});return(0,f.jsxs)(l.ZP,{container:!0,spacing:2,justifyContent:"center",alignItems:"center",children:[(0,f.jsx)(l.ZP,{item:!0,children:L("Choices",t)}),(0,f.jsx)(l.ZP,{item:!0,children:(0,f.jsxs)(l.ZP,{container:!0,direction:"column",alignItems:"center",children:[(0,f.jsx)(h.Z,{sx:{my:.5},variant:"outlined",size:"small",onClick:()=>{k(b.concat(C)),g(x(t,C)),n(x(e,C))},disabled:0===C.length,"aria-label":"move selected right",children:">"}),(0,f.jsx)(h.Z,{sx:{my:.5},variant:"outlined",size:"small",onClick:()=>{g(t.concat(v)),k(x(b,v)),n(x(e,v))},disabled:0===v.length,"aria-label":"move selected left",children:"<"})]})}),(0,f.jsx)(l.ZP,{item:!0,children:L("Chosen",b)})]})}},87815:(e,n,t)=>{t.d(n,{Z:()=>x});var i=t(47313),l=t(9019),s=t(48310),a=t(60194),c=t(74748),r=t(83213),o=t(44758),d=t(24193),m=t(82295),h=t(46417);function u(e,n){return e.filter((e=>-1===n.indexOf(e)))}function f(e,n){return e.filter((e=>-1!==n.indexOf(e)))}function x(){const[e,n]=i.useState([]),[t,x]=i.useState([0,1,2,3]),[p,g]=i.useState([4,5,6,7]),b=f(e,t),k=f(e,p),C=t=>()=>{const i=e.indexOf(t),l=[...e];-1===i?l.push(t):l.splice(i,1),n(l)},v=n=>(0,h.jsx)(m.Z,{sx:{width:200,height:230,overflow:"auto"},children:(0,h.jsxs)(s.Z,{dense:!0,component:"div",role:"list",children:[n.map((n=>{const t="transfer-list-item-".concat(n,"-label");return(0,h.jsxs)(a.ZP,{role:"listitem",button:!0,onClick:C(n),children:[(0,h.jsx)(c.Z,{children:(0,h.jsx)(o.Z,{checked:-1!==e.indexOf(n),tabIndex:-1,disableRipple:!0,inputProps:{"aria-labelledby":t}})}),(0,h.jsx)(r.Z,{id:t,primary:"List item ".concat(n+1)})]},n)})),(0,h.jsx)(a.ZP,{})]})});return(0,h.jsxs)(l.ZP,{container:!0,spacing:2,justifyContent:"center",alignItems:"center",children:[(0,h.jsx)(l.ZP,{item:!0,children:v(t)}),(0,h.jsx)(l.ZP,{item:!0,children:(0,h.jsxs)(l.ZP,{container:!0,direction:"column",alignItems:"center",children:[(0,h.jsx)(d.Z,{sx:{my:.5},variant:"outlined",size:"small",onClick:()=>{g(p.concat(t)),x([])},disabled:0===t.length,"aria-label":"move all right",children:"\u226b"}),(0,h.jsx)(d.Z,{sx:{my:.5},variant:"outlined",size:"small",onClick:()=>{g(p.concat(b)),x(u(t,b)),n(u(e,b))},disabled:0===b.length,"aria-label":"move selected right",children:">"}),(0,h.jsx)(d.Z,{sx:{my:.5},variant:"outlined",size:"small",onClick:()=>{x(t.concat(k)),g(u(p,k)),n(u(e,k))},disabled:0===k.length,"aria-label":"move selected left",children:"<"}),(0,h.jsx)(d.Z,{sx:{my:.5},variant:"outlined",size:"small",onClick:()=>{x(t.concat(p)),g([])},disabled:0===p.length,"aria-label":"move all left",children:"\u226a"})]})}),(0,h.jsx)(l.ZP,{item:!0,children:v(p)})]})}},13561:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});var i=t(44269),l=t(24193),s=t(71263),a=t(61113),c=t(46417);const r=function(e){return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("div",{className:"flex flex-1 flex-grow-0 items-center justify-end",children:(0,c.jsxs)(l.Z,{className:"normal-case",variant:"contained",color:"secondary",component:"a",href:"https://mui.com/components/transfer-list",target:"_blank",role:"button",children:[(0,c.jsx)(s.Z,{children:"link"}),(0,c.jsx)("span",{className:"mx-4",children:"Reference"})]})}),(0,c.jsx)(a.Z,{className:"text-40 my-16 font-700",component:"h1",children:"Transfer List"}),(0,c.jsx)(a.Z,{className:"description",children:"A transfer list (or 'shuttle') enables the user to move one or more list items between lists."}),(0,c.jsx)(a.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Basic transfer list"}),(0,c.jsx)(a.Z,{className:"mb-40",component:"div",children:'For completeness, this example includes buttons for "move all", but not every transfer list needs these.'}),(0,c.jsx)(a.Z,{className:"mb-40",component:"div",children:(0,c.jsx)(i.Z,{className:"my-24",iframe:!1,component:t(87815).Z,raw:t(83241)})}),(0,c.jsx)(a.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Enhanced transfer list"}),(0,c.jsx)(a.Z,{className:"mb-40",component:"div",children:'This example exchanges the "move all" buttons for a "select all / select none" checkbox, and adds a counter.'}),(0,c.jsx)(a.Z,{className:"mb-40",component:"div",children:(0,c.jsx)(i.Z,{className:"my-24",iframe:!1,component:t(64451).Z,raw:t(8179)})}),(0,c.jsx)(a.Z,{className:"text-32 mt-40 mb-10 font-700",component:"h2",children:"Limitations"}),(0,c.jsx)(a.Z,{className:"mb-40",component:"div",children:"The component comes with a couple of limitations:"}),(0,c.jsxs)("ul",{children:[(0,c.jsxs)("li",{children:["It only works on desktop. If you have a limited amount of options to select, prefer the"," ",(0,c.jsx)("a",{href:"/components/autocomplete/#multiple-values",children:"Autocomplete"})," ","component. If mobile support is important for you, have a look at"," ",(0,c.jsx)("a",{href:"https://github.com/mui-org/material-ui/issues/27579",children:"#27579"}),"."]}),(0,c.jsxs)("li",{children:["There are no high-level components exported from npm. The demos are based on composition. If this is important for you, have a look at"," ",(0,c.jsx)("a",{href:"https://github.com/mui-org/material-ui/issues/27579",children:"#27579"}),"."]})]})]})}},8179:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});const i='import * as React from "react";\nimport Grid from "@mui/material/Grid";\nimport List from "@mui/material/List";\nimport Card from "@mui/material/Card";\nimport CardHeader from "@mui/material/CardHeader";\nimport ListItem from "@mui/material/ListItem";\nimport ListItemText from "@mui/material/ListItemText";\nimport ListItemIcon from "@mui/material/ListItemIcon";\nimport Checkbox from "@mui/material/Checkbox";\nimport Button from "@mui/material/Button";\nimport Divider from "@mui/material/Divider";\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function TransferList() {\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = (items) => intersection(checked, items).length;\n\n  const handleToggleAll = (items) => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => (\n    <Card>\n      <CardHeader\n        sx={{ px: 2, py: 1 }}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={\n              numberOfChecked(items) === items.length && items.length !== 0\n            }\n            indeterminate={\n              numberOfChecked(items) !== items.length &&\n              numberOfChecked(items) !== 0\n            }\n            disabled={items.length === 0}\n            inputProps={{\n              "aria-label": "all items selected",\n            }}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n      />\n      <Divider />\n      <List\n        sx={{\n          width: 200,\n          height: 230,\n          bgcolor: "background.paper",\n          overflow: "auto",\n        }}\n        dense\n        component="div"\n        role="list"\n      >\n        {items.map((value) => {\n          const labelId = `transfer-list-all-item-${value}-label`;\n\n          return (\n            <ListItem\n              key={value}\n              role="listitem"\n              button\n              onClick={handleToggle(value)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{\n                    "aria-labelledby": labelId,\n                  }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Card>\n  );\n\n  return (\n    <Grid container spacing={2} justifyContent="center" alignItems="center">\n      <Grid item>{customList("Choices", left)}</Grid>\n      <Grid item>\n        <Grid container direction="column" alignItems="center">\n          <Button\n            sx={{ my: 0.5 }}\n            variant="outlined"\n            size="small"\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label="move selected right"\n          >\n            &gt;\n          </Button>\n          <Button\n            sx={{ my: 0.5 }}\n            variant="outlined"\n            size="small"\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label="move selected left"\n          >\n            &lt;\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList("Chosen", right)}</Grid>\n    </Grid>\n  );\n}\n'},83241:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});const i='import * as React from "react";\nimport Grid from "@mui/material/Grid";\nimport List from "@mui/material/List";\nimport ListItem from "@mui/material/ListItem";\nimport ListItemIcon from "@mui/material/ListItemIcon";\nimport ListItemText from "@mui/material/ListItemText";\nimport Checkbox from "@mui/material/Checkbox";\nimport Button from "@mui/material/Button";\nimport Paper from "@mui/material/Paper";\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nexport default function TransferList() {\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = (items) => (\n    <Paper sx={{ width: 200, height: 230, overflow: "auto" }}>\n      <List dense component="div" role="list">\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n\n          return (\n            <ListItem\n              key={value}\n              role="listitem"\n              button\n              onClick={handleToggle(value)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{\n                    "aria-labelledby": labelId,\n                  }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid container spacing={2} justifyContent="center" alignItems="center">\n      <Grid item>{customList(left)}</Grid>\n      <Grid item>\n        <Grid container direction="column" alignItems="center">\n          <Button\n            sx={{ my: 0.5 }}\n            variant="outlined"\n            size="small"\n            onClick={handleAllRight}\n            disabled={left.length === 0}\n            aria-label="move all right"\n          >\n            \u226b\n          </Button>\n          <Button\n            sx={{ my: 0.5 }}\n            variant="outlined"\n            size="small"\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label="move selected right"\n          >\n            &gt;\n          </Button>\n          <Button\n            sx={{ my: 0.5 }}\n            variant="outlined"\n            size="small"\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label="move selected left"\n          >\n            &lt;\n          </Button>\n          <Button\n            sx={{ my: 0.5 }}\n            variant="outlined"\n            size="small"\n            onClick={handleAllLeft}\n            disabled={right.length === 0}\n            aria-label="move all left"\n          >\n            \u226a\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(right)}</Grid>\n    </Grid>\n  );\n}\n'}}]);