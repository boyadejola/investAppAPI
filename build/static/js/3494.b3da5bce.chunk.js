"use strict";(self.webpackChunkfuse_react_app=self.webpackChunkfuse_react_app||[]).push([[3494],{53494:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var a=n(1483),s=n(61113),r=n(46417);const o=function(){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.Z,{variant:"h4",className:"mb-40 font-700",children:"RTL Support"}),(0,r.jsx)(s.Z,{className:"mb-16",component:"p",children:"Fuse React supports Right-to-left languages such as Arabic, Persian or Hebrew, etc."}),(0,r.jsx)(s.Z,{className:"text-20 mt-20 mb-10 font-700",variant:"h5",children:"Development"}),(0,r.jsxs)(s.Z,{className:"mb-16",component:"p",children:["There are two plugins"," ",(0,r.jsx)("a",{href:"https://github.com/RonMelkhior/tailwindcss-dir",target:"_blank",rel:"noopener noreferrer",children:(0,r.jsx)("code",{children:"tailwindcss-dir"})})," ","and"," ",(0,r.jsx)("a",{href:"https://github.com/alitaheri/jss-rtl",target:"_blank",rel:"noopener noreferrer",children:(0,r.jsx)("code",{children:"jss-rtl"})})," ","that we use to develop RTL support of the Fuse React."]}),(0,r.jsxs)(s.Z,{className:"mb-16",component:"p",children:[(0,r.jsx)("a",{href:"https://github.com/alitaheri/jss-rtl",target:"_blank",rel:"noopener noreferrer",children:(0,r.jsx)("code",{children:"jss-rtl"})})," ","enables right-to-left support by flipping every rule of the jss styles on the x-axis. You can write the application left-to-right and then turn it into right-to-left using this plugin. Or you can start right-to-left and turn it into left-to-right."]}),(0,r.jsxs)(s.Z,{className:"mb-16",component:"p",children:[(0,r.jsx)("a",{href:"https://github.com/RonMelkhior/tailwindcss-dir",target:"_blank",rel:"noopener noreferrer",children:(0,r.jsx)("code",{children:"tailwindcss-dir"})})," ","adds a custom direction variant to your tailwind project, letting you have custom CSS rules for LTR and RTL layouts. For example:"]}),(0,r.jsx)(a.Z,{component:"pre",className:"language-jsx mb-24",children:'\n                            <div class="text-green text-2xl ltr:pl-4 rtl:pr-4">\n                                Hello, world.\n                            </div>\n                        '}),(0,r.jsx)(s.Z,{className:"text-20 mt-20 mb-10 font-700",variant:"h5",children:"Configuration"}),(0,r.jsxs)(s.Z,{className:"mb-16",component:"p",children:["To change the default direction of the Fuse React, you need to change"," ",(0,r.jsx)("code",{children:"direction"}),"setting in the file ",(0,r.jsx)("code",{children:"src/app/fuse-configs/settingsConfig.js"})]}),(0,r.jsx)(a.Z,{component:"pre",className:"language-jsx mb-24",children:n(44165)}),(0,r.jsx)(s.Z,{className:"text-20 mt-20 mb-10 font-700",variant:"h5",children:"Dynamically Direction Changing"}),(0,r.jsx)(s.Z,{className:"mb-16",component:"p",children:"If you need to change theme direction dynamically, for example when you need to change LTR to RTL language, you need dispatch an action as below:"}),(0,r.jsx)(a.Z,{component:"pre",className:"language-jsx mb-24",children:"\n                            dispatch(setDefaultSettings({direction: 'rtl'}));\n                        "}),(0,r.jsxs)(s.Z,{className:"mb-16",component:"p",children:["Checkout example usage at",(0,r.jsx)("code",{children:"src/app/fuse-layouts/shared-components/LanguageSwitcher.js"})]})]})}},44165:(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});const a='const settingsConfig = {\n  layout: {\n    style: "layout1", // layout1 layout2 layout3\n    config: {}, // checkout default layout configs at app/fuse-layouts for example  app/fuse-layouts/layout1/Layout1Config.js\n  },\n  customScrollbars: true,\n  direction: "ltr", // rtl, ltr\n  theme: {\n    main: "greyDark", //\'default\',\n    navbar: "greyDark",\n    toolbar: "greyDark", // \'mainThemeLight\',\n    footer: "greyDark", // \'mainThemeDark\',\n  },\n};\n\nexport default settingsConfig;\n'}}]);